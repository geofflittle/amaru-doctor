[package]
name = "amaru-doctor"
version = "0.0.1"
edition = "2024"
description = "A TUI for amaru"
authors = ["jeluard <jeluard@users.noreply.github.com>"]
build = "build.rs"
repository = "https://github.com/jeluard/amaru-doctor"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
amaru-consensus = { git = "https://github.com/pragma-org/amaru.git" }
amaru-kernel = { git = "https://github.com/pragma-org/amaru.git" }
amaru-ledger = { git = "https://github.com/pragma-org/amaru.git" }
amaru-stores = { git = "https://github.com/pragma-org/amaru.git" }
better-panic = "0.3.0"
cbor-diag = "0.1.12"
chrono = "0.4.41"
clap = { version = "4.5.20", features = [
    "derive",
    "cargo",
    "wrap_help",
    "unicode",
    "string",
    "unstable-styles",
    "env",
] }
color-eyre = "0.6.3"
config = "0.15.11"
crossterm = { version = "0.28.1", features = ["serde", "event-stream"] }
delegate = "0.10"
derive_deref = "1.1.1"
directories = "6.0.0"
either = "1.9"
futures = "0.3.31"
hex = "0.4.3"
human-panic = "2.0.2"
json5 = "0.4.1"
lazy_static = "1.5.0"
libc = "0.2.161"
minicbor = { version = "0.25.1", features = ["alloc"] }
opentelemetry-proto = "0.30.0"
pallas-codec = "0.32.0"
pallas-primitives = "0.32.0"
pretty_assertions = "1.4.1"
ratatui = { version = "0.29.0", features = ["serde", "macros"] }
ratatui-splash-screen = "0.1.4"
serde = { version = "1.0.211", features = ["derive"] }
serde_json = "1.0.132"
serde_plain = "1.0.2"
signal-hook = "0.3.17"
slot-arithmetic = { git = "https://github.com/pragma-org/amaru.git" }
strip-ansi-escapes = "0.2.0"
strum = { version = "0.27.1", features = ["derive"] }
sysinfo = "0.36.0"
tokio = { version = "1.40.0", features = ["full"] }
tokio-util = "0.7.12"
tonic = "0.13.1"
tracing = "0.1.40"
tracing-error = "0.2.0"
tracing-subscriber = { version = "0.3.19", features = ["env-filter", "serde"] }

[build-dependencies]
anyhow = "1.0.90"
vergen-gix = { version = "1.0.2", features = ["build", "cargo"] }

[workspace.metadata.cross.target.aarch64-unknown-linux-musl]
pre-build = [
    "apt update",
    "apt install -y libclang-dev"
]
[workspace.metadata.cross.target.aarch64-unknown-linux-musl.env]
passthrough = ["LIBCLANG_PATH=/usr/lib/llvm-10/lib"]